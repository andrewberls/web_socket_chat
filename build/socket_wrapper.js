// Generated by CoffeeScript 1.3.3
var SocketWrapper;

SocketWrapper = Backbone.Model.extend({
  defaults: {
    connected: false,
    count: 0
  },
  connect: function() {
    var url,
      _this = this;
    if (window.socket && socket.readyState === 1) {
      return;
    }
    url = "ws://" + (this.get('host')) + ":" + (this.get('port'));
    console.log("Connecting to " + url);
    window.socket = new WebSocket(url);
    this.set({
      connected: true
    });
    socket.onmessage = function(msg) {
      var response;
      try {
        response = JSON.parse(msg.data);
      } catch (ex) {
        _this.trigger('socket:parse_error', "Could not parse socket msg: " + msg.data);
      }
      if (response.type === 'Connect') {
        console.log("Connection received");
        return _this.trigger('socket:connect', response['count']);
      } else {
        return _this.trigger('socket:message', response['data']);
      }
    };
    socket.onerror = function(evt) {
      this.set({
        connected: false
      });
      return this.trigger('socket:error');
    };
    return socket.onclose = function(evt) {
      return _this.set({
        connected: false
      });
    };
  },
  disconnect: function() {
    if (window.socket && window.socket.readyState === 1) {
      console.log("Disconnecting");
      return window.socket.close();
    }
  }
});
