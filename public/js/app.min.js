// Generated by CoffeeScript 1.3.3
var SocketWrapper;SocketWrapper=Backbone.Model.extend({defaults:{connected:!1,count:0},connect:function(){var e,t=this;if(window.socket&&socket.readyState===1)return;return e="ws://"+this.get("host")+":"+this.get("port"),console.log("Connecting to "+e),window.socket=new WebSocket(e),this.set({connected:!0}),socket.onmessage=function(e){var n;try{n=JSON.parse(e.data)}catch(r){t.trigger("socket:parse_error","Could not parse socket msg: "+e.data)}return n.type==="Connect"?(console.log("Connection received"),t.trigger("socket:connect",n.count)):t.trigger("socket:message",n.data)},socket.onerror=function(e){return this.set({connected:!1}),this.trigger("socket:error")},socket.onclose=function(e){return t.set({connected:!1})}},disconnect:function(){if(window.socket&&window.socket.readyState===1)return console.log("Disconnecting"),window.socket.close()}});var ConnectionView;ConnectionView=Backbone.View.extend({template:_.template($("#template-socket-connection").html()),events:{"click .btn-primary":"connect","click .btn-danger":"disconnect"},initialize:function(){return console.log("Socket view initialized. Attempting connection..."),this.model.on("change:connected",this.render,this),this.model.on("socket:connect",function(e){return this.model.set({count:e}),this.render()},this),this.model.connect()},render:function(){return $(this.el).html(this.template(this.model.toJSON())),this},connect:function(){return this.model.connect()},disconnect:function(){return this.model.disconnect()}});var MessageListView,MessageView,__hasProp={}.hasOwnProperty;MessageView=Backbone.View.extend({template:_.template($("#template-socket-message").html()),render:function(){return $(this.el).html(this.template(this.model)),this}}),MessageListView=Backbone.View.extend({template:_.template($("#template-socket-message-list").html()),initialize:function(){return this.model.on("socket:message",this.onMessage,this),this.data=[],this.loadMessages()},loadMessages:function(){var e=this;return $(this.el).html(""),$.ajax({url:"/messages.json",success:function(t){var n,r,i,s,o,u,a;u=JSON.parse(t),a=[];for(s=0,o=u.length;s<o;s++)r=u[s],a.push(function(){var e;e=[];for(n in r){if(!__hasProp.call(r,n))continue;i=r[n],e.push($(this.el).append("              <div class='message'>                <p>"+i+"</p>              </div>            "))}return e}.call(e));return a}})},onMessage:function(e){return this.data.push({message:e}),this.render()},render:function(){return this.loadMessages(),this}});var sendIfEnter,setup;sendIfEnter=function(e,t){if(window.socket&&t.keyCode===13)return window.socket.send($(e).val()),$(e).val("")},setup=function(){var e,t,n;return WebSocket?$(".if-web-sockets").show():$(".no-web-sockets").show(),n=new SocketWrapper({host:"localhost",port:8080}),e=new ConnectionView({model:n}),$("#connect").append(e.$el),t=new MessageListView({model:n}),$("#messages").append(t.$el)},$(function(){return setup(),$("#message-input").keyup(function(e){return sendIfEnter(this,e)})}),$(window).unload(function(){return window.socket.close()});